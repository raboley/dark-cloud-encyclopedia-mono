service: crop-blackbars

frameworkVersion: ">=1.10.0"

custom:
  bucket: dark-cloud-bucket-${self:provider.stage}
  pythonRequirements:
    dockerizePip: true
provider:
  name: aws
  runtime: python3.6
  memorySize: 512
  timeout: 10
  stage: dev
  region: us-west-2

  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:*
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "rekognition:*"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "s3:PutBucketNotification"
      Resource:
        Fn::Join:
          - ""
          - - "arn:aws:s3:::dark-cloud-bucket-${self:provider.stage}"

# package:
#  include:
#    - categorize/**

functions:
  cropBlackBars:
    handler: handler.crop_bars
    events:
      - existingS3:
          bucket: dark-cloud-bucket-${self:provider.stage}
          events: 
            - s3:ObjectCreated:*
          rules:
            - prefix: staging/weapons/images/
    environment:
      project: dark-cloud
      stage: ${self:provider.stage}
# resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: dark-cloud-bucket-${self:provider.stage}

plugins:
  - serverless-python-requirements
  - serverless-plugin-existing-s3
